project4.m tests
=================
This final iteration of the program, completely overhauls how cards are dealt. In previous iterations the program would simply randomly select cards from a predefined set. However, it lacked realness, such as ace's that are able to be equal 1 or 11; such as in real blackjack, it also meant cards could be used multiple times. e.g it's rare but potentially possible for a 1 could be drawn 21 times in a row. Therefore a function dealCard, was created to reduce length of script, and improve upon the lacking functionary in previous iterations.

Testing dealCard function
==========================
As existing code has been previously tested, it is still assumed working and thus, only new code (relating to the dealCard function) will be tested here.

A fresh deck of card contains 52 cards. Therefore after dealing the 2 initial cards to the player, plus 2 initial cards to the dealer there should be 48 cards remaining in the deck.
Note: within program 'Used cards' are represented with a 0.

Initial deck	expected deck					observed deck
[1:52]		[1:52] but with 4 random variable changed to 0	[1,2,3,4,5,6,7,0,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,30,31,32,0,34,35,36,37,38,39,40,41,42,43,44,0,46,47,48,49,50,51,52]
[1:52]		[1:52] but with 4 random variable changed to 0	[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,0,19,20,21,22,23,24,25,0,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,48,49,0,51,52]

Therefore it an be assumed that the function is taking cards correctly.

Next, it shall be tested to check that it is drawing cards correctly. The function is setup to assign variable within 1:52 to a respective card from a standard deck and out of both the name and value of the card As it is randomised the exact result can't be predicted, but it can be tested to ensure that the number in the card name is represented correctly with it's value.

Expected output - card	expected output - value
*number* of *suite*	*number*

Observed output - card	observed output - value
Five of hearts		5
Jack of spades		10
Two of clubs		2
Six of spades		6
King of clubs		10
King of spades		10
Four of spades		4
Two of clubs		2

As cards within function are successfully being marked as 'used' and cards withdrawn appear to have correct corresponding values to names, it can be assumed that this function is working as expected.

Testing within project4.m
=========================
Predicted output dealers cards							dealers values	sum
		a of suite, b of suite.... n of suite				a,b,...n	a+b+...n

Observed output	dealers cards							dealers values 	sum
Case1	"Eight of Diamonds""Six of Clubs""Six of Diamonds"			8,6,6		20
Case2	"Four of Hearts""Two of Diamonds""Eight of Hearts""Three of Hearts"	4,2,8,3		17
Case3	"Jack of Clubs"	"Four of Clubs"	"Six of Diamonds""Two of Spades"	10,4,6,2	22
Case4	"King of Spades""Seven of Clubs"					10,7		17

Predicted output players cards							dealers values	sum
		a of suite, b of suite.... n of suite				a,b,...n	a+b+...n

Observed output	players cards							dealers values 	sum
Case1	"Eight of Spades""Eight of Diamonds""Seven of Hearts"			8,8,7		23
Case2	"Six of Spades"	"King of Hearts"					6,10		16
Case3	"Five of Clubs"	"Queen of Hearts""Two of Clubs"				5,10,2		17
Case4	"Jack of Spades""Seven of Clubs""Two of Hearts""Two of Clubs"		10,7,2,2	21


	Predicted winner of rounds			observed output
Case1 	Player looses for exceeding 21, dealer wins	"You loose due to exceeding 21, with a total of 23"
Case2	Dealer, 1 point higher				"The house won with a score of 17. Unfortunately you only got 16. Better luck next time."
Case3	Player, dealer exceeded 21			"The house exceeded 21, so you win the round Ben"
Case4	player, 4 points higher				"You got a perfect 21, lets see how the dealer did","Congratulations!! Ben won with a score of 21, with the house only getting 17."


As it can be seen the script still functions as it did previously; without the implication of this function. However now it is able to mark cards in the deck as used, as well as keeping track of card names such as queen of hearts which provides a much more higher level of realness. It can be assumed by this point everything is functioning as expected, as proven by testing a variety of outcomes.